    start: (with_def)* value_defs func_defs from

    value_defs: (value_def)*
    func_defs: (func_def)*

    value_def: "value" NAME "=" "(" from ")"
    with_def: "table" NAME "=" "(" from ")"
    from: "from" NAME "|"? (join)? "|"? pipes

    pipes.2: ((select | derive | filter | sort | take| aggregate) ("|")?)*
    join: ("join"|"left_join")+ name "[" name ("=" name)? "]"

    aggregate: "aggregate" ("by" ":" ("[" group_by "]"|group_by) )? "["? aggregate_body "]"?
    group_by: name ("," name)*
    aggregate_body: ( (NAME ":")?  _line)? ( "," ((NAME ":")?  _line))*

    _line: (STRING|FSTRING|func_call)
    take: "take" INT

    filter: "filter" (ESCAPED_STRING|expression)?
    sort: "sort" (ESCAPED_STRING|name)


    select: ("select" select_fields)+
    select_fields: ("[" [(name ",")*] name "]")* (name*)

    derive: ("derive" ( "[" derive_line+ "]" | derive_line ))+
    derive_line: name ":" expression (",")?

    expression:  eq

    func_def: "func" NAME (func_args)? "=" "("? func_body ")"?
    func_args: ((NAME " ")* NAME)*
    func_body: _line ("," _line)*
    func_call: "count" | NAME | NAME value | NAME value value | NAME value value value

    piped_call: NAME ("." NAME)* "|" func_call

    eq: gt | gt "=" gt | neq
    neq: expression "!=" expression

    gt: sum | sum ">" sum | lt | gte | lte
    ?lt:  sum "<" sum
    ?lte:  sum "<=" sum
    ?gte:  sum ">=" sum

    ?sum: product | sum "+" product | diff
    ?diff: sum "-" product
    ?product: atom | product "*" atom | division
    ?division: product "/" atom
    ?atom: "(" expression ")" | value | piped_call

    value: NAME | STRING | NUMBER | SIGNED_NUMBER | FLOAT | SIGNED_FLOAT | FSTRING
    name: NAME ( "." NAME)*

    FSTRING: "f" STRING
    COMMENT: /#[^\n]*/
    OP_ADD: "+"
    OP_SUB: "-"
    OP_MUL: "*"
    OP_DIV: "/"
    OP_MOD: "%"
    OP_EQ: "="
    OP_NE: "!="
    OP_LT: "<"
    OP_GT: ">"
    OP_LE: "<="
    OP_GE: ">="
    OP_COLON: ":"

    %import python (NAME, STRING, INTEGER)
    %import common (WS,INT,SIGNED_INT,NUMBER,SIGNED_NUMBER,FLOAT,SIGNED_FLOAT,ESCAPED_STRING)
    %ignore WS
    %ignore COMMENT