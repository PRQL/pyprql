# TODO: can probably integrate this into the cicd — it's only called from one place

name: Setup Python Semantic Release
description: "Prepare Python Semantic Release"

inputs:
  gh_token:
    description: "Github token for validating uploads."
    required: True
  pypi_token:
    description: "PyPI token for validating uploads."
    required: True
  cache_number:
    description: "A manually specified cache number. Useful for triggering new caches."
    required: True
    default: 0
  poetry_version:
    description: "Which poetry version to use."
    required: True
    default: 1.3.0

runs:
  using: composite
  steps:
    - name: Setup Pyton
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: ${{ inputs.poetry_version }}
    - name: Cache Pip
      uses: actions/cache@v3
      with:
        path: ~/.pip
        key: pip${{ inputs.cache_number }}-PT${{ inputs.poetry_version }}
    - name: Get Dependencies
      shell: bash
      run: poetry install
    - name: Configure git
      shell: bash
      run: |
        git config --global user.name 'rbpatt2019'
        git config --global user.email 'rbpatt2019@users.noreply.github.com'
    - name: Python Semantic Release
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.gh_token }}
        REPOSITORY_USERNAME: __token__
        REPOSITORY_PASSWORD: ${{ inputs.pypi_token }}
      run: |
        poetry run semantic-release -v DEBUG publish
