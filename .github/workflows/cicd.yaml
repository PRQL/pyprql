name: CI/CD
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

  workflow_dispatch:

env:
  CACHE_NUMBER: 4
  POETRY_VERSION: 1.1.13
  PSR_VERSION: 7.27.1

# We cache the lint and security job, as there is no poetry install
jobs:
  form:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Nox and Poetry
        uses: ./.github/actions/setup_nox
        with:
          cache_number: ${{ env.CACHE_NUMBER }}
          poetry_version: ${{ env.POETRY_VERSION }}
      - name: Format
        run: nox -s form
      - name: Commit blackened files
        uses: EndBug/add-and-commit@v9
        with:
          message: "style(*): blacken files"
          default_author: github_actions

  lint:
    runs-on: ubuntu-latest
    needs: [ form ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Nox and Poetry
        uses: ./.github/actions/setup_nox
        with:
          cache_number: ${{ env.CACHE_NUMBER }}
          poetry_version: ${{ env.POETRY_VERSION }}
      - name: Format
        run: nox -s lint type

  security:
    runs-on: ubuntu-latest
    needs: [ form ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Nox and Poetry
        uses: ./.github/actions/setup_nox
        with:
          cache_number: ${{ env.CACHE_NUMBER }}
          poetry_version: ${{ env.POETRY_VERSION }}
      - name: Check for Dependency Vulnerabilities
        run: nox -s security

  test:
    runs-on: ubuntu-latest
    needs: [ form ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Nox and Poetry
        uses: ./.github/actions/setup_nox
        with:
          cache_number: ${{ env.CACHE_NUMBER }}
          poetry_version: ${{ env.POETRY_VERSION }}
      - name: Test Code and Docs
        run: nox -s tests
      - name: Upload to CodeCov
        uses: codecov/codecov-action@v2
        with:
          files: ./coverage.xml
          fail_ci_if_error: true
          verbose: true

  release:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [ form, lint, test, security ]
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      REPOSITORY_USERNAME: __token__
      REPOSITORY_PASSWORD: ${{ secrets.PYPI_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Pyton
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Cache Pip
        uses: actions/cache@v2
        env:
          CACHE_NUMBER: 0
        with:
          path: ~/.pip
          key:
            pip-${{ env.CACHE_NUMBER }}-PT${{ env.POETRY_VERSION }}-PRS${{ env.PSR_VERSION }}
      - name: Get Dependencies
        run: |
          pip install poetry==$POETRY_VERSION python-semantic-release==$PSR_VERSION
      - name: Configure git
        run: |
          git config --global user.name 'qorrect'
          git config --global user.email 'qorrect@users.noreply.github.com'
          git pull
      - name: Python Semantic Release
        run: |
          semantic-release -v DEBUG publish
